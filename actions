src/map.c:  map = game->map[ply->map];
src/main.c:  game->player = player;
src/mobs.c~:  while (game->level->mob[i] != NULL)
src/mobs.c~:      printf("%s :\n(%s)\n", game->level->mob[i]->name, game->level->mob[i]->texture);
src/mobs.c~:      printf("life : %d\ndamage : %d\n", game->level->mob[i]->life,
src/mobs.c~:	     game->level->mob[i]->damage);
src/event_manager.c~:  event = game->level->event;
src/aff_perso.c:  pos.x = SCR_W / 2 + game->ply->pos.x * game->tile.x / 2 -
src/aff_perso.c:    game->ply->pos.y * game->tile.y / 2;
src/aff_perso.c:  pos.y = game->ply->pos.x * game->tile.x / 2 +
src/aff_perso.c:    game->ply->pos.y * game->tile.y / 2;
src/aff_perso.c:  rect.y1 = SIZE_PLY * game->ply->class;
src/config_map.c:  map = game->level->map->content;
src/config_map.c:  game->tile = dims[1];
src/config_map.c:      map = game->level->map->content;
src/grid.c:  map = game->level->map->content;
src/grid.c:  game->tile = dims[1];
src/show_player.c~:			game->level->map->content);
src/show_player.c~:  sfSprite_setPosition(sprite, convert_pos(player->pos, game->tile));
src/show_player.c~:			game->level->map->content);
src/actions.c:  tile = game->tile;
src/config/texture:conf_fill.c:  game->map_status = 0;
src/config/texture:conf_fill.c:  game->level = build_graph(level);
src/config/#texture#:conf_fill.c:  game->map_status = 0;
src/config/#texture#:conf_fill.c:  game->level = build_graph(level);
src/config/conf_fill.c:  game->map_status = 0;
src/config/conf_fill.c:  game->level = build_graph(level);
src/aff_decor.c:  if (game->level->map == NULL || game->level->map->bg == NULL)
src/aff_decor.c:      game->bg = NULL;
src/aff_decor.c:  if ((texture = sfTexture_createFromFile(game->level->map->bg, NULL)) == NULL ||
src/aff_decor.c:  game->bg = sprite;
src/pathfind.tmp:  if (x == game->player->pos.x && y == game->player->pos.y)
src/pathfind.tmp:  dir = find_path(game->map[0], ply->pos, dir, NULL);
src/help.c:/*   while (game->map[i] != NULL) */
src/help.c:/*       while (game->map[i][j] != NULL) */
src/help.c:/* 	  while (game->map[i][j][k] != EOB) */
src/help.c:/* 	      printf("%d,", game->map[i][j][k]); */
src/anim.c:  pos = convert_pos(player->pos, game->tile);
src/anim.c:  sprite = get_static_char(game->player->spriteboard, (sfVector2i) {player->sprt,
src/anim.c:  sides[0] = convert_pos(player->pos, game->tile);
src/anim.c:  sides[1] = convert_pos(player->next, game->tile);
src/check_pos.c:	      game->level = (tp[i])->room;
src/check_pos.c:  check_tp(player->pos, game->level->tp, player, game);
src/event_manager.c:  if ((dialog = get_dialog(dialogfile, &(game->actions))) == NULL)
src/event_manager.c:      game->actions = 0;
src/event_manager.c:  sfText_setFont(text, game->font);
src/event_manager.c:  sfRenderWindow_drawSprite(window, game->quest, NULL);
src/event_manager.c:  printf("%d\n", game->actions);
src/event_manager.c:  event = game->level->event;
src/event_manager.c:  while (game->pnj[i] != NULL)
src/event_manager.c:    sfRenderWindow_drawSprite(window, game->pnj[i++], NULL);
src/event_manager.c:	  game->actions += 1;
src/event_manager.c:  if (game->actions)
src/event_manager.c:	game->actions += 1;
src/get_file.c:  if ((game->map[lvl] = malloc(sizeof(int *) * (size[0] + 1))) == NULL)
src/get_file.c:  game->map[lvl][size[0]] = NULL;
src/get_file.c:      if ((game->map[lvl][l] = get_line(tmp, size[1])) == NULL)
src/get_file.c:  game->enemies = NULL;
src/get_file.c:  if ((game->map = malloc(sizeof(int **) * (specs[0] + 1))) == NULL)
src/get_file.c:  game->map[specs[0]] = NULL;
src/show_player.c:			game->level->map->content);
src/show_player.c:  sfSprite_setPosition(sprite, convert_pos(player->pos, game->tile));
src/show_player.c:			game->level->map->content);
src/mouse.c:	if (my_check_class(window, game->player) == 1)
src/mobs.c:  while (game->level->mob[i] != NULL)
src/mobs.c:      printf("%s :\n(%s)\n", game->level->mob[i]->name
src/mobs.c:	     , game->level->mob[i]->texture);
src/mobs.c:      printf("life : %d\ndamage : %d\n", game->level->mob[i]->life,
src/mobs.c:	     game->level->mob[i]->damage);
src/game_sound.c:  if ((music = sfMusic_createFromFile(game->level->map->music)) == NULL)
src/get_texture.c:    {(int)(size.x / div.x), (int)(size.y / div.y)}), game->tile);
src/loop.c:	  if (game->bg != NULL)
src/loop.c:	    sfRenderWindow_drawSprite(window, game->bg, NULL);
src/loop.c:      printf("%s\n", game->level->map->bg);
src/loop.c:  tmpdisp(game->level->tp, game);
src/loop.c:  game->pnj = NULL;
src/loop.c:  game->quest = NULL;
src/loop.c:  game->actions = 0;
src/quest_character.c:      game->font = NULL;
src/quest_character.c:  game->font = font;
src/quest_character.c:  game->quest = sprite;
src/quest_character.c:    {(int)(size.x), (int)(size.y)}), game->tile);
src/quest_character.c:  sfSprite_setPosition(sprite, convert_pos(pnj_pos, game->tile));
src/quest_character.c:  game->pnj[x] = sprite;
src/quest_character.c:  event = game->level->event;
src/quest_character.c:  if ((game->pnj = malloc(sizeof(sfSprite *) * (x + 1))) == NULL)
src/quest_character.c:  game->pnj[x] = NULL;
loop.c:  if (game->bg != NULL)
loop.c:    sfRenderWindow_drawSprite(window, game->bg, NULL);
loop.c:      printf("%s\n", game->level->map->bg);
loop.c:  tmpdisp(game->level->tp, game);
